show dbs
use mongo_practice
db.movies.insertMany([
{
'title': 'Fight Club'
'writer': 'Chuck Palahniuko',
'year': 1999,
'actors': ['Brad Pitt','Edward Norton']
},

{
'title': 'Pulp Fiction',
'writer': 'Quentin Tarantino',
'year': 1994,
'actors': ['John Travolta','Uma Thurman']
},

{
'title': 'Inglorious Basterds',
'writer': 'Quentin Tarantino',
'year': 2009,
'actors': ['Brad Pitt','Diane Kruger','Eli Roth']
},
{
'title': 'The Hobbit: An Unexpected Journey',
'writer': 'J.R.R. Tolkein',
'year': 2012,
'franchise': 'The Hobbit'
},
{
'title': 'The Hobbit: The Desolation of Smaug',
'writer': 'J.R.R. Tolkein',
'year': 2013,
'franchise': 'The Hobbit'
},
{
'title': 'The Hobbit: The Battle of the Five Armies',
'writer': 'J.R.R. Tolkein',
'year': 2012,
'franchise': 'The Hobbit',
'synopsis': 'Bilbo and company are forced to engage in a war against an array of combatants and keep the lonely mountain from falling into the hands of a rising darkness.'
},
{
'title': 'Pee Wee Hermans big Adventure'
},
{
'title': 'Avatar'
}
])

db.movies.find().pretty()

db.movies.find({writer: 'Quentin Tarantino'}).pretty()

db.movies.find({actors: 'Brad Pitt'}).pretty()

db.movies.find({franchise: 'The Hobbit'}).pretty()

db.movies.find({franchise: 1990}).pretty()



db.movies.find( {
$and: [
{ year: { $gte: 1990 } },
{ year: { $lte: 2000 } }
]
} ).pretty()



db.movies.find( {
$or: [
{ year: { $gt: 2010 } },
{ year: { $lt: 2000 } }
]
} ).pretty()

db.movies.updateOne({"title": "The Hobbit: An Unexpected Journey"},
{$set: {"synopsis": "A reluctant hobbit, Bilbo Baggins,sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home-and the gold within it - from the dragon Smaug."}})

db.movies.updateOne({"title":"A reluctant hobbit, Bilbo Baggins,sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home-and the gold within it - from the dragon Smaug."}, {$set: {"title": "The Hobbit: An Unexpected Journey"}})

db.movies.updateOne({"title": "The Hobbit: The Desolation of Smaug"},{$set: {"synopsis": "The dwarves along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."}})

db.movies.updateOne({"title":"Pulp Fiction"}, {$set: {"actors": "Samuel L. Jackson"}})

db.movies.find( { $text: { $search: "Bilbo" } } )

db.movies.find({synopsis: "Bilbo"})

db.movies.find( { $text: { $search: "Bilbo" } } )

db.movies.ensureIndex({"synopsis": "text"})

db.movies.find({$text: {$search: "Bilbo"}})

db.movies.find({$text: {$search: "Gandalf"}})

db.movies.find({$text: {$search: "Bilbo -Gandalf"}})

db.movies.find({$text: {$search: "dwarves hobbit"}})

db.movies.find({$text: {$search: "gold dragon"}})

db.movies.deleteOne({title:"Pee Wee Herman's Big Adventure"})

db.movies.deleteOne({title:"Avatar"})

db.users.insertOne({username: "GoodGuyGreg", first_name: "Good Guy", last_name: "Greg", username: "ScumbagSteve", full_name: [{first: "Scumbag", last: "Steve"}]})

db.posts.insertMany([{username: "GoodGuyGreg", title:"Passes out at party", body: "Wakes up early and cleans house"},
{username: "GoodGuyGreg", title:"Steals your identity", body: "Raises your credit score"},
{username: "GoodGuyGreg", title:"Reports a bug in your code", body: "Sends you a Pull Request"},
{username: "ScumbagSteve", title:"Borrows something", body: "Shells it"},
{username: "ScumbagSteve", title:"Borrows everything", body: "The end"},
{username: "ScumbagSteve", title:"Forks your repo on github", body: "Sets to private"}])

db.comments.insertMany([{username:"GoodGuyGreg", comment:"Hope you got a good deal!",post: ObjectId("61b8555ab7e90c761dc2c3e0")},
{username:"GoodGuyGreg", comment:"What's mine is yours!",post: ObjectId("61b8533ab7e90c761dc2c3de")},
{username:"GoodGuyGreg", comment:"Don't violate the licensing agreement!",post: ObjectId("61b853f3b7e90c761dc2c3df")},
{username:"ScumbagSteve", comment:"It still isn't clean!",post: ObjectId("61b85218b7e90c761dc2c3dd")},
{username:"ScumbagSteve", comment:"Denied your PR cause I found a hack!",post: ObjectId("61b8516bb7e90c761dc2c3dc")},
])

db.posts.find({username: "GoodGuyGreg"})

db.posts.aggregate([{$match: {title: "Reports a bug in your code"}},{
$lookup:{from:"comments", localField: '_id', foreignField: "post", as: "comments"}}])

